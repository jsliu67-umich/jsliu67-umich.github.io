[{"/Users/jsliu/Desktop/dining-hall-app/src/index.js":"1","/Users/jsliu/Desktop/dining-hall-app/src/App.js":"2","/Users/jsliu/Desktop/dining-hall-app/src/reportWebVitals.js":"3","/Users/jsliu/Desktop/dining-hall-app/src/pages/Home.jsx":"4","/Users/jsliu/Desktop/dining-hall-app/src/utils/requests.js":"5","/Users/jsliu/Desktop/dining-hall-app/src/components/input-hook.jsx":"6","/Users/jsliu/Desktop/dining-hall-app/src/components/AddFoodForm.jsx":"7","/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx":"8","/Users/jsliu/Desktop/dining-hall-app/src/components/Calculate.jsx":"9","/Users/jsliu/Desktop/dining-hall-app/src/components/FoodItem.jsx":"10"},{"size":535,"mtime":1650853285809,"results":"11","hashOfConfig":"12"},{"size":958,"mtime":1657058525195,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1650836851217,"results":"14","hashOfConfig":"12"},{"size":1910,"mtime":1657084848091,"results":"15","hashOfConfig":"12"},{"size":411,"mtime":1657084730338,"results":"16","hashOfConfig":"12"},{"size":308,"mtime":1651257324509,"results":"17","hashOfConfig":"12"},{"size":925,"mtime":1676071491803,"results":"18","hashOfConfig":"12"},{"size":8095,"mtime":1676069460873,"results":"19","hashOfConfig":"12"},{"size":3503,"mtime":1657077470609,"results":"20","hashOfConfig":"12"},{"size":1897,"mtime":1676772772763,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vjhlxb",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"/Users/jsliu/Desktop/dining-hall-app/src/index.js",[],[],"/Users/jsliu/Desktop/dining-hall-app/src/App.js",["59","60","61"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Home from './pages/Home';\n\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\n\n\nfunction getDaysFacts(props) {\n  let day = props.day; // year-month-day e.g. 2022-01-11\n  let diningHall = props.diningHall;\n  let meal = props.meal.toUpperCase(); // breakfast, brunch, lunch, dinner\n  let url = `https://michigan-dining-api.tendiesti.me/v1/menus?date=${day}&diningHall=${diningHall}%20Dining%20Hall&meal=${meal}`;\n\n}\n\nfunction LoadFacts(props) {\n  return (\n    <button className=\"loadButton\" onClick={() => this.props.onClick()}>\n      \"hi\"\n    </button>\n  );\n}\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home/>}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jsliu/Desktop/dining-hall-app/src/reportWebVitals.js",[],[],"/Users/jsliu/Desktop/dining-hall-app/src/pages/Home.jsx",["62"],[],"\nimport React, { useEffect, useState } from 'react';\nimport { GetMenuForm } from '../components/GetMenuForm';\nimport Typography from '@mui/material/Typography';\nimport { AddFoodForm } from '../components/AddFoodForm';\n\n\nconst Home = () => {\n    const [validMenu, setValidMenu] = useState(true)\n    const [foodDisplay, setFoodDisplay] = useState({ })\n    const [foodAmounts, setFoodAmounts] = useState({ })\n    const [foodFacts, setFoodFacts] = useState({ })\n    const FoodHandler = (tempFoodDisplay, tempFoodAmounts, tempFoodFacts) => {\n        setFoodDisplay(tempFoodDisplay)\n        setFoodAmounts(tempFoodAmounts)\n        setFoodFacts(tempFoodFacts)\n        console.log(foodDisplay)\n        console.log(foodAmounts)\n        console.log(foodFacts)\n    }\n\n    const error = (validMenu) => {\n        let returnVal = <></>\n        if (validMenu) {\n            returnVal =\n                <div>\n                    Select your dining hall.\n                </div>\n        }\n        else{\n            returnVal =\n                <div>\n                    Bad dining hall, date, or meal. Try again.\n                </div>\n        }\n        return <>\n            {returnVal}\n        </>\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h2\" className=\"main-header\">MDining Nutrition Calculator</Typography>\n            {/* {if(menu == {})} */}\n            <GetMenuForm onFoodHandler={FoodHandler} setValidMenu={setValidMenu} />\n            {console.log(foodDisplay)}\n            {\n                // (Object.keys(foodDisplay).length === 0) ? <AddFoodForm /> : null\n                (Object.keys(foodDisplay).length === 0)\n                    ? error(validMenu)\n                    : <AddFoodForm foodFacts={foodFacts} foodDisplay={foodDisplay} foodAmounts={foodAmounts} setFoodAmounts={setFoodAmounts} />\n            }\n            {/* <AddFoodForm /> */}\n        </div>\n    );\n}\n\nexport default Home;","/Users/jsliu/Desktop/dining-hall-app/src/utils/requests.js",[],[],"/Users/jsliu/Desktop/dining-hall-app/src/components/input-hook.jsx",[],[],"/Users/jsliu/Desktop/dining-hall-app/src/components/AddFoodForm.jsx",["63","64","65"],[],"import React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\nimport { FoodItem } from '../components/FoodItem';\n\nexport function AddFoodForm(props) {\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        // resetDiningHall();\n        // resetDate();\n        // resetMeal();\n    }\n\n    return (\n        <div>\n            <form className=\"amount-form\">\n                {\n                    Object.entries(props.foodDisplay).map(([key, value]) => (\n                        Object.entries(value).map(([key2, value2]) => (\n                            <FoodItem val={value2} foodFacts={props.foodFacts} foodAmounts={props.foodAmounts}/>\n                        ))\n                    ))\n                }\n            </form>\n            <Calculate foodFacts={props.foodFacts} foodAmounts={props.foodAmounts}/>\n        </div>\n    )\n}",[],"/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx",["66","67","68","69","70","71"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests'\n\nexport function GetMenuForm(props) {\n    // const { value: diningHall, bind: bindDiningHall, reset: resetDiningHall } = useInput('');\n    // const { value: date, bind: bindDate, reset: resetDate } = useInput('');\n    // const { value: meal, bind: bindMeal, reset: resetMeal } = useInput('');\n\n    const [diningHall, setDiningHall] = useState('Bursley')\n    const [date, setDate] = useState('')\n    const [meal, setMeal] = useState('Breakfast')\n\n    const [firstMount, setFirstMount] = useState(0)\n    const [menus, setMenus] = useState({}\n        // [{\n        //     category: [{\n        //         name: \"\",\n        //         menuItem: [\n        //             {\n        //                 name: \"\",\n        //                 itemSizes: [{\n        //                     nutritionalInfo: [\n        //                         {\n        //                             name: \"\",\n        //                             value: \"\"\n        //                         }\n        //                     ]\n        //                 }]\n        //             }\n        //         ]\n        //     }, {}\n        //     ]\n        // }]\n    );\n\n\n    useEffect(() => {\n        console.log(1)\n        console.log(menus)\n        if(firstMount < 1){\n            setFirstMount(firstMount + 1);\n            let date = new Date();\n\n            // var formatedDate = `${date.getMonth()+1}-${date.getDate()}-${date.getFullYear()}`\n            let currMonth = date.getMonth() + 1\n            let currDate = date.getDate()\n            currMonth = currMonth <= 9 ? `0${currMonth}` : `${currMonth}`\n            currDate = currDate <= 9 ? `0${currDate}` : `${currDate}`\n            let formatedDate = `${date.getFullYear()}-${currMonth}-${currDate}`\n            console.log(formatedDate)\n            setDate(formatedDate)\n            return;\n        }\n        else{\n            console.log(2)\n            updateMenus();\n        }\n    }, [menus]);\n\n    const handleDiningHallChange = (event) => {\n        setDiningHall(event.target.value);\n    };\n    const handleDateChange = (event) => {\n        setDate(event.target.value);\n    };\n    const handleMealChange = (event) => {\n        setMeal(event.target.value);\n    };\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        // resetDiningHall();\n        // resetDate();\n        // resetMeal();\n    }\n\n    const fetchMenus = async (diningHall, date, meal) => {\n        diningHall = diningHall.replace(' ', '%20')\n        meal = meal.toUpperCase();\n\n        console.log(diningHall)\n        console.log(date)\n        console.log(meal)\n\n        // getMenus(diningHall, date, meal, setMenus)\n        console.log(menus)\n        const data = await getMenus(diningHall, date, meal)\n        await setMenus(data)\n    }\n\n    const updateMenus = () => {\n        // tempFoodDisplay = {}\n        let tempFoodDisplay = {}\n        let tempFoodAmounts = {}\n        let tempFoodFacts = {}\n        console.log(menus)\n        if(!('category' in menus[0])){\n            props.setValidMenu(false)\n            props.onFoodHandler({}, {}, {})\n            return;\n        }\n        props.setValidMenu(true)\n        menus[0].category.map((categoryItem, index) => {\n            // foodAmounts[categoryItem.name] = 0\n            let tempCategoryObject = {}\n            let tempFoodFactsSingle = {}\n            tempCategoryObject[categoryItem.name] = []\n            categoryItem.menuItem.map((menuItem, index) => {\n                const tempMenuItem = {}\n                tempMenuItem[menuItem.name] = 0\n                tempFoodAmounts = ({...tempFoodAmounts, ...tempMenuItem})\n                tempCategoryObject[categoryItem.name].push(menuItem.name)\n                let foodFactsObject = {}\n                foodFactsObject[menuItem.name] = {}\n                // console.log(\"MFOIESNFOESMOSIENF\", menuItem)\n                if('nutritionalInfo' in menuItem.itemSizes[0]){\n                    menuItem.itemSizes[0].nutritionalInfo.map((nutritionalItem, index) => {\n                        // foodFactsObject[menuItem.name][\"Beef\"] = \"three\"\n                        // console.log(nutritionalItem.value)\n                        // let includeItem = false\n                        foodFactsObject[menuItem.name][\"serving_size\"] = menuItem.itemSizes[0].servingSize\n                        if (nutritionalItem.name === \"Calories\"){\n                            // console.log(nutritionalItem.value)\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Protein\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Carbohydrate\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Fat\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n\n                        // foodFacts[menuItem.name][nutritionalItem.name] = nutritionalItem.value\n                        // const newFoodFacts = {\n                        //     ...foodFacts,\n                        //     ...(includeItem && {\"three\": nutritionalItem['value']})\n                        // }\n                        // foodFacts = newFoodFacts\n                    })\n                    tempFoodFactsSingle = {...tempFoodFactsSingle, ...foodFactsObject}\n                }\n                else{\n                    console.log(`${menuItem.name} is missing nutrition facts`)\n                }\n                // setFoodFacts({...foodFacts, ...foodFactsObject})\n            })\n            tempFoodFacts = {...tempFoodFacts, ...tempFoodFactsSingle}\n            console.log(tempFoodFacts)\n            // console.log(tempCategoryObject)\n            tempFoodDisplay = {...tempFoodDisplay, ...tempCategoryObject}\n        })\n\n        props.onFoodHandler(tempFoodDisplay, tempFoodAmounts, tempFoodFacts)\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"main-form\">\n                <label>\n                    Dining Hall:\n                    <select value={diningHall} onChange={handleDiningHallChange}>\n                        <option defaultValue=\"Bursley\">Bursley</option>\n                        <option value=\"South Quad\">South Quad</option>\n                        <option value=\"East Quad\">East Quad</option>\n                        <option value=\"Mosher Jordan\">Mosher Jordan</option>\n                    </select>\n                </label>\n                <label>\n                    Date:\n                    <input type=\"date\" value={date} onChange={handleDateChange} />\n                </label>\n                <label>\n                    Meal:\n                    <select value={meal} onChange={handleMealChange} className=\"custom-select\">\n                        <option value=\"Breakfast\">Breakfast</option>\n                        <option value=\"Brunch\">Brunch</option>\n                        <option value=\"Lunch\">Lunch</option>\n                        <option value=\"Linner\">Linner</option>\n                        <option value=\"Dinner\">Dinner</option>\n                    </select>\n                </label>\n            </form>\n            <button className=\"buttons\" onClick={() => fetchMenus(diningHall, date, meal)}>Generate Menu</button>\n            {/* <button className=\"buttons\" onClick={() => updateMenus()}>Update Menus</button> */}\n        </div>\n    )\n}","/Users/jsliu/Desktop/dining-hall-app/src/components/Calculate.jsx",["72","73"],[],"import React, { useState, useEffect } from \"react\";\n\nexport function Calculate(props) {\n    const [cals, setCals] = useState(0.0)\n    const [protein, setProtein] = useState(0.0)\n    const [carbs, setCarbs] = useState(0.0)\n    const [fats, setFats] = useState(0.0)\n    const [calculate, setCalculate] = useState(false)\n\n    const combineCalculate = (boolVal) => {\n        setCalculate(boolVal)\n        let [cals, protein, carbs, fats] = calculateTotal()\n        setCals(cals)\n        setProtein(protein)\n        setCarbs(carbs)\n        setFats(fats)\n        console.log(carbs)\n        return\n    }\n    const displayCalculate = () => {\n        return (\n            <>\n                <div className=\"nutrition-header\">Nutrition Facts</div>\n                <ul className=\"nutrition-items\">\n                    {/* <li>{names}</li> */}\n                    <li>Calories: {cals}</li>\n                    <li>Protein: {protein}</li>\n                    <li>Total Carbohydrate: {carbs}</li>\n                    <li>Total Fat: {fats}</li>\n                </ul>\n            </>\n        )\n    }\n\n    const calculateTotal = () => {\n        let cals = 0, protein = 0, carbs = 0, fats = 0\n        // setCalculate(false)\n        console.log(props.foodAmounts)\n        function printMissing(missing, value) {\n            console.log(`${missing}: ${value} missing`)\n        }\n        Object.entries(props.foodAmounts).map(([key, val]) => {\n            // if value missing, console.log it. else, += it\n            if (val !== 0) {\n                if (props.foodFacts[key][\"Calories\"] !== undefined) {\n                    // console.log(val)\n                    // rounds number to 2 decimal places\n                    // setCals(cals + Math.round((foodFacts[key][\"Calories\"] * val)*100)/100)\n                    cals += Math.round((props.foodFacts[key][\"Calories\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Calories')\n                }\n                if (props.foodFacts[key][\"Protein\"] !== undefined) {\n                    // setProtein(protein + Math.round((foodFacts[key][\"Protein\"] * val)*100)/100)\n                    protein += Math.round((props.foodFacts[key][\"Protein\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Protein')\n                }\n                if (props.foodFacts[key][\"Total Carbohydrate\"] !== undefined) {\n                    // setCarbs(carbs + Math.round((foodFacts[key][\"Total Carbohydrate\"] * val)*100)/100)\n                    carbs += Math.round((props.foodFacts[key][\"Total Carbohydrate\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Carbohydrate')\n                }\n                if (props.foodFacts[key][\"Total Fat\"] !== undefined) {\n                    // setFats(fats + Math.round((foodFacts[key][\"Total Fat\"] * val)*100)/100)\n                    fats += Math.round((props.foodFacts[key][\"Total Fat\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Fat')\n                }\n            }\n        })\n        return [cals, protein, carbs, fats]\n    }\n    return (\n        <div>\n            <button className=\"buttons\" onClick={() => {\n                combineCalculate(true)\n            }}>\n            Calculate\n            </button>\n            {calculate ?\n                displayCalculate() :\n                null\n            }\n        </div>\n    )\n}","/Users/jsliu/Desktop/dining-hall-app/src/components/FoodItem.jsx",["74","75","76"],[],"import React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\n\nexport function FoodItem(props) {\n    const [isNotActive, setNotActive] = useState(\"true\");\n\n    return (\n        <div>\n            <label key={props.val}>\n                <a onClick={\n                    () => {\n                        console.log(isNotActive)\n                        setNotActive(!isNotActive);\n                    }\n                }>\n                    {props.val}:\n                </a>\n                <input className=\"amount-form-single\" type=\"number\" onChange={num => {\n                    // console.log(num.target.value)\n                    let tempFoodAmounts = props.foodAmounts\n                    tempFoodAmounts[props.val] = num.target.value\n                    // console.log(tempFoodAmounts)\n                    props.setFoodAmounts(tempFoodAmounts)\n                }} />\n            </label>\n            \n            {props.foodFacts[props.val] !== undefined ? \n            <div className={isNotActive ? \"hide\" : \"show\"}>\n                <ul style={{\"margin-top\": 0}}>\n                    <li>Serving Size: {\"serving_size\" in props.foodFacts[props.val] ? props.foodFacts[props.val].serving_size : \"Null\"}</li>\n                    <li>Calories: {\"Calories\" in props.foodFacts[props.val] ? props.foodFacts[props.val].Calories : \"Null\"}</li>\n                    <li>Protein: {\"Protein\" in props.foodFacts[props.val] ? props.foodFacts[props.val].Protein : \"Null\"}</li>\n                    <li>Total Carbohydrate: {\"Total Carbohydrates\" in props.foodFacts[props.val] ? props.foodFacts[props.val][\"Total Carbohydrate\"] : \"Null\"}</li>\n                    <li>Total Fat: {\"Total Fat\" in props.foodFacts[props.val] ? props.foodFacts[props.val][\"Total Fat\"] : \"Null\"}</li>\n                </ul>\n            </div>\n            : <div></div>\n            }\n        </div>\n    )\n\n}",{"ruleId":"77","severity":1,"message":"78","line":12,"column":10,"nodeType":"79","messageId":"80","endLine":12,"endColumn":22},{"ruleId":"77","severity":1,"message":"81","line":16,"column":7,"nodeType":"79","messageId":"80","endLine":16,"endColumn":10},{"ruleId":"77","severity":1,"message":"82","line":20,"column":10,"nodeType":"79","messageId":"80","endLine":20,"endColumn":19},{"ruleId":"77","severity":1,"message":"83","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":26},{"ruleId":"77","severity":1,"message":"84","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"83","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"85","line":6,"column":11,"nodeType":"79","messageId":"80","endLine":6,"endColumn":23},{"ruleId":"77","severity":1,"message":"86","line":1,"column":38,"nodeType":"79","messageId":"80","endLine":1,"endColumn":44},{"ruleId":"77","severity":1,"message":"87","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":59,"column":8,"nodeType":"90","endLine":59,"endColumn":15,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":105,"column":53,"nodeType":"94","messageId":"95","endLine":105,"endColumn":55},{"ruleId":"92","severity":1,"message":"93","line":110,"column":57,"nodeType":"94","messageId":"95","endLine":110,"endColumn":59},{"ruleId":"92","severity":1,"message":"93","line":119,"column":88,"nodeType":"94","messageId":"95","endLine":119,"endColumn":90},{"ruleId":"77","severity":1,"message":"83","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":42,"column":60,"nodeType":"94","messageId":"95","endLine":42,"endColumn":62},{"ruleId":"77","severity":1,"message":"83","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"96","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":10,"column":17,"nodeType":"99","endLine":15,"endColumn":19},"no-unused-vars","'getDaysFacts' is defined but never used.","Identifier","unusedVar","'url' is assigned a value but never used.","'LoadFacts' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'handleSubmit' is assigned a value but never used.","'useRef' is defined but never used.","'useInput' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firstMount' and 'updateMenus'. Either include them or remove the dependency array. You can also do a functional update 'setFirstMount(f => ...)' if you only need 'firstMount' in the 'setFirstMount' call.","ArrayExpression",["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Calculate' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"101","fix":"102"},"Update the dependencies array to be: [firstMount, menus, updateMenus]",{"range":"103","text":"104"},[2060,2067],"[firstMount, menus, updateMenus]"]