{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/FoodItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FoodItem(props) {\n  _s();\n\n  const [isNotActive, setNotActive] = useState(\"false\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => {\n          console.log(isNotActive);\n          setNotActive(!isNotActive);\n        },\n        children: [props.val, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"amount-form-single\",\n        type: \"number\",\n        onChange: num => {\n          // console.log(num.target.value)\n          let tempFoodAmounts = props.foodAmounts;\n          tempFoodAmounts[props.val] = num.target.value; // console.log(tempFoodAmounts)\n\n          props.setFoodAmounts(tempFoodAmounts);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, props.val, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), isActive, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isActive ? \"hide\" : \"show\",\n      children: [isActive, /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          \"margin-top\": 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Serving Size: \", props.foodFacts[props.val].serving_size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Calories: \", props.foodFacts[props.val].Calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Protein: \", props.foodFacts[props.val].Protein]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total Carbohydrate: \", props.foodFacts[props.val][\"Total Carbohydrate\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total Fat: \", props.foodFacts[props.val][\"Total Fat\"]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FoodItem, \"UlJQIpGSOAoHC9NZ5um7xwEWu8o=\");\n\n_c = FoodItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodItem\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/FoodItem.jsx"],"names":["React","useState","useEffect","Calculate","FoodItem","props","isNotActive","setNotActive","console","log","val","num","tempFoodAmounts","foodAmounts","target","value","setFoodAmounts","isActive","foodFacts","serving_size","Calories","Protein"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BN,QAAQ,CAAC,OAAD,CAA5C;AAEA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAG,QAAA,OAAO,EACN,MAAM;AACFO,UAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAC,UAAAA,YAAY,CAAC,CAACD,WAAF,CAAZ;AACH,SAJL;AAAA,mBAMKD,KAAK,CAACK,GANX;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAO,QAAA,SAAS,EAAC,oBAAjB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,QAAQ,EAAEC,GAAG,IAAI;AACjE;AACA,cAAIC,eAAe,GAAGP,KAAK,CAACQ,WAA5B;AACAD,UAAAA,eAAe,CAACP,KAAK,CAACK,GAAP,CAAf,GAA6BC,GAAG,CAACG,MAAJ,CAAWC,KAAxC,CAHiE,CAIjE;;AACAV,UAAAA,KAAK,CAACW,cAAN,CAAqBJ,eAArB;AACH;AAND;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA,OAAYP,KAAK,CAACK,GAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,EAmBKO,QAnBL,eAoBI;AAAK,MAAA,SAAS,EAAEA,QAAQ,GAAG,MAAH,GAAY,MAApC;AAAA,iBACKA,QADL,eAEI;AAAI,QAAA,KAAK,EAAE;AAAC,wBAAc;AAAf,SAAX;AAAA,gCACI;AAAA,uCAAmBZ,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACK,GAAtB,EAA2BS,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,mCAAed,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACK,GAAtB,EAA2BU,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,kCAAcf,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACK,GAAtB,EAA2BW,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,6CAAyBhB,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACK,GAAtB,EAA2B,oBAA3B,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,oCAAgBL,KAAK,CAACa,SAAN,CAAgBb,KAAK,CAACK,GAAtB,EAA2B,WAA3B,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GArCeN,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\n\nexport function FoodItem(props) {\n    const [isNotActive, setNotActive] = useState(\"false\");\n\n    return (\n        <div>\n            <label key={props.val}>\n                <a onClick={\n                    () => {\n                        console.log(isNotActive)\n                        setNotActive(!isNotActive);\n                    }\n                }>\n                    {props.val}:\n                </a>\n                <input className=\"amount-form-single\" type=\"number\" onChange={num => {\n                    // console.log(num.target.value)\n                    let tempFoodAmounts = props.foodAmounts\n                    tempFoodAmounts[props.val] = num.target.value\n                    // console.log(tempFoodAmounts)\n                    props.setFoodAmounts(tempFoodAmounts)\n                }} />\n            </label>\n            \n            {isActive}\n            <div className={isActive ? \"hide\" : \"show\"}>\n                {isActive}\n                <ul style={{\"margin-top\": 0}}>\n                    <li>Serving Size: {props.foodFacts[props.val].serving_size}</li>\n                    <li>Calories: {props.foodFacts[props.val].Calories}</li>\n                    <li>Protein: {props.foodFacts[props.val].Protein}</li>\n                    <li>Total Carbohydrate: {props.foodFacts[props.val][\"Total Carbohydrate\"]}</li>\n                    <li>Total Fat: {props.foodFacts[props.val][\"Total Fat\"]}</li>\n                </ul>\n            </div>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}