{"ast":null,"code":"import _slicedToArray from\"/Users/jsliu/Desktop/dining-hall-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Calculate(props){var _useState=useState(0.0),_useState2=_slicedToArray(_useState,2),cals=_useState2[0],setCals=_useState2[1];var _useState3=useState(0.0),_useState4=_slicedToArray(_useState3,2),protein=_useState4[0],setProtein=_useState4[1];var _useState5=useState(0.0),_useState6=_slicedToArray(_useState5,2),carbs=_useState6[0],setCarbs=_useState6[1];var _useState7=useState(0.0),_useState8=_slicedToArray(_useState7,2),fats=_useState8[0],setFats=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),calculate=_useState10[0],setCalculate=_useState10[1];var combineCalculate=function combineCalculate(boolVal){setCalculate(boolVal);var _calculateTotal=calculateTotal(),_calculateTotal2=_slicedToArray(_calculateTotal,4),cals=_calculateTotal2[0],protein=_calculateTotal2[1],carbs=_calculateTotal2[2],fats=_calculateTotal2[3];setCals(cals);setProtein(protein);setCarbs(carbs);setFats(fats);console.log(carbs);return;};var displayCalculate=function displayCalculate(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"nutrition-header\",children:\"Nutrition Facts\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"nutrition-items\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Calories: \",cals]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Protein: \",protein]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Total Carbohydrate: \",carbs]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Total Fat: \",fats]})]})]});};var calculateTotal=function calculateTotal(){var cals=0,protein=0,carbs=0,fats=0;// setCalculate(false)\nconsole.log(props.foodAmounts);function printMissing(missing,value){console.log(\"\".concat(missing,\": \").concat(value,\" missing\"));}Object.entries(props.foodAmounts).map(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],val=_ref2[1];// if value missing, console.log it. else, += it\nif(val!==0){if(props.foodFacts[key][\"Calories\"]!==undefined){// console.log(val)\n// rounds number to 2 decimal places\n// setCals(cals + Math.round((foodFacts[key][\"Calories\"] * val)*100)/100)\ncals+=Math.round(props.foodFacts[key][\"Calories\"]*val*100)/100;}else{printMissing(key,'Calories');}if(props.foodFacts[key][\"Protein\"]!==undefined){// setProtein(protein + Math.round((foodFacts[key][\"Protein\"] * val)*100)/100)\nprotein+=Math.round(props.foodFacts[key][\"Protein\"]*val*100)/100;}else{printMissing(key,'Protein');}if(props.foodFacts[key][\"Total Carbohydrate\"]!==undefined){// setCarbs(carbs + Math.round((foodFacts[key][\"Total Carbohydrate\"] * val)*100)/100)\ncarbs+=Math.round(props.foodFacts[key][\"Total Carbohydrate\"]*val*100)/100;}else{printMissing(key,'Total Carbohydrate');}if(props.foodFacts[key][\"Total Fat\"]!==undefined){// setFats(fats + Math.round((foodFacts[key][\"Total Fat\"] * val)*100)/100)\nfats+=Math.round(props.foodFacts[key][\"Total Fat\"]*val*100)/100;}else{printMissing(key,'Total Fat');}}});return[cals,protein,carbs,fats];};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"buttons\",onClick:function onClick(){combineCalculate(true);},children:\"Calculate\"}),calculate?displayCalculate():null]});}","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/Calculate.jsx"],"names":["React","useState","useEffect","Calculate","props","cals","setCals","protein","setProtein","carbs","setCarbs","fats","setFats","calculate","setCalculate","combineCalculate","boolVal","calculateTotal","console","log","displayCalculate","foodAmounts","printMissing","missing","value","Object","entries","map","key","val","foodFacts","undefined","Math","round"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport function Calculate(props) {\n    const [cals, setCals] = useState(0.0)\n    const [protein, setProtein] = useState(0.0)\n    const [carbs, setCarbs] = useState(0.0)\n    const [fats, setFats] = useState(0.0)\n    const [calculate, setCalculate] = useState(false)\n\n    const combineCalculate = (boolVal) => {\n        setCalculate(boolVal)\n        let [cals, protein, carbs, fats] = calculateTotal()\n        setCals(cals)\n        setProtein(protein)\n        setCarbs(carbs)\n        setFats(fats)\n        console.log(carbs)\n        return\n    }\n    const displayCalculate = () => {\n        return (\n            <>\n                <div className=\"nutrition-header\">Nutrition Facts</div>\n                <ul className=\"nutrition-items\">\n                    {/* <li>{names}</li> */}\n                    <li>Calories: {cals}</li>\n                    <li>Protein: {protein}</li>\n                    <li>Total Carbohydrate: {carbs}</li>\n                    <li>Total Fat: {fats}</li>\n                </ul>\n            </>\n        )\n    }\n\n    const calculateTotal = () => {\n        let cals = 0, protein = 0, carbs = 0, fats = 0\n        // setCalculate(false)\n        console.log(props.foodAmounts)\n        function printMissing(missing, value) {\n            console.log(`${missing}: ${value} missing`)\n        }\n        Object.entries(props.foodAmounts).map(([key, val]) => {\n            // if value missing, console.log it. else, += it\n            if (val !== 0) {\n                if (props.foodFacts[key][\"Calories\"] !== undefined) {\n                    // console.log(val)\n                    // rounds number to 2 decimal places\n                    // setCals(cals + Math.round((foodFacts[key][\"Calories\"] * val)*100)/100)\n                    cals += Math.round((props.foodFacts[key][\"Calories\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Calories')\n                }\n                if (props.foodFacts[key][\"Protein\"] !== undefined) {\n                    // setProtein(protein + Math.round((foodFacts[key][\"Protein\"] * val)*100)/100)\n                    protein += Math.round((props.foodFacts[key][\"Protein\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Protein')\n                }\n                if (props.foodFacts[key][\"Total Carbohydrate\"] !== undefined) {\n                    // setCarbs(carbs + Math.round((foodFacts[key][\"Total Carbohydrate\"] * val)*100)/100)\n                    carbs += Math.round((props.foodFacts[key][\"Total Carbohydrate\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Carbohydrate')\n                }\n                if (props.foodFacts[key][\"Total Fat\"] !== undefined) {\n                    // setFats(fats + Math.round((foodFacts[key][\"Total Fat\"] * val)*100)/100)\n                    fats += Math.round((props.foodFacts[key][\"Total Fat\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Fat')\n                }\n            }\n        })\n        return [cals, protein, carbs, fats]\n    }\n    return (\n        <div>\n            <button className=\"buttons\" onClick={() => {\n                combineCalculate(true)\n            }}>\n            Calculate\n            </button>\n            {calculate ?\n                displayCalculate() :\n                null\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}