{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetMenuForm(props) {\n  _s();\n\n  const {\n    value: diningHall,\n    bind: bindDiningHall,\n    reset: resetDiningHall\n  } = useInput('');\n  const {\n    value: date,\n    bind: bindDate,\n    reset: resetDate\n  } = useInput('');\n  const {\n    value: meal,\n    bind: bindMeal,\n    reset: resetMeal\n  } = useInput('');\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // alert(`Submitting Name ${value}`);\n    // resetDiningHall();\n    // resetDate();\n    // resetMeal();\n  };\n\n  const fetchMenus = async (diningHall, date, meal) => {\n    diningHall = diningHall.replace(' ', '%20');\n    meal = meal.toUpperCase();\n    const data = await getMenus(diningHall, date, meal);\n    setMenus(data);\n  };\n\n  const updateMenus = () => {\n    // tempFoodDisplay = {}\n    let tempFoodDisplay = {};\n    let tempFoodAmounts = {};\n    let tempFoodFacts = {};\n    console.log(foodAmounts);\n    menus[0].category.map((categoryItem, index) => {\n      // foodAmounts[categoryItem.name] = 0\n      let tempCategoryObject = {};\n      let tempFoodFactsSingle = {};\n      tempCategoryObject[categoryItem.name] = [];\n      categoryItem.menuItem.map((menuItem, index) => {\n        const tempMenuItem = {};\n        tempMenuItem[menuItem.name] = 0;\n        tempFoodAmounts = { ...tempFoodAmounts,\n          ...tempMenuItem\n        };\n        tempCategoryObject[categoryItem.name].push(menuItem.name);\n        let foodFactsObject = {};\n        foodFactsObject[menuItem.name] = {};\n\n        if ('nutritionalInfo' in menuItem.itemSizes[0]) {\n          menuItem.itemSizes[0].nutritionalInfo.map((nutritionalItem, index) => {\n            foodFactsObject[menuItem.name][\"Beef\"] = \"three\"; // console.log(nutritionalItem.value)\n            // let includeItem = false\n\n            if (nutritionalItem.name === \"Calories\") {\n              // console.log(nutritionalItem.value)\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Protein\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Total Carbohydrate\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Total Fat\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } // foodFacts[menuItem.name][nutritionalItem.name] = nutritionalItem.value\n            // const newFoodFacts = {\n            //     ...foodFacts,\n            //     ...(includeItem && {\"three\": nutritionalItem['value']})\n            // }\n            // foodFacts = newFoodFacts\n\n          });\n          tempFoodFactsSingle = { ...tempFoodFactsSingle,\n            ...foodFactsObject\n          };\n        } else {\n          console.log(`${menuItem.name} is missing nutrition facts`);\n        } // setFoodFacts({...foodFacts, ...foodFactsObject})\n\n      });\n      tempFoodFacts = { ...tempFoodFacts,\n        ...tempFoodFactsSingle\n      };\n      console.log(tempFoodFacts); // console.log(tempCategoryObject)\n\n      tempFoodDisplay = { ...tempFoodDisplay,\n        ...tempCategoryObject\n      };\n    });\n    props.onFoodHandler([...tempFoodDisplay, ...tempFoodAmounts, ...tempFoodFacts]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"main-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Dining Hall:\", /*#__PURE__*/_jsxDEV(\"select\", { ...bindDiningHall,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: \"Bursley\",\n            children: \"Bursley\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"South Quad\",\n            children: \"South Quad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"East Quad\",\n            children: \"East Quad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mosher Jordan\",\n            children: \"Mosher Jordan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ...bindDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Meal:\", /*#__PURE__*/_jsxDEV(\"select\", { ...bindMeal,\n          className: \"custom-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Breakfast\",\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Brunch\",\n            children: \"Brunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lunch\",\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Linner\",\n            children: \"Linner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dinner\",\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: () => fetchMenus(diningHall, date, meal),\n      children: \"Get Menus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: () => updateMenus(),\n      children: \"Update Menus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GetMenuForm, \"dqlZ1iFZReN1j/Ii4FJWaWXyF1Y=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = GetMenuForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMenuForm\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx"],"names":["React","useState","useEffect","useInput","getMenus","GetMenuForm","props","value","diningHall","bind","bindDiningHall","reset","resetDiningHall","date","bindDate","resetDate","meal","bindMeal","resetMeal","handleSubmit","evt","preventDefault","fetchMenus","replace","toUpperCase","data","setMenus","updateMenus","tempFoodDisplay","tempFoodAmounts","tempFoodFacts","console","log","foodAmounts","menus","category","map","categoryItem","index","tempCategoryObject","tempFoodFactsSingle","name","menuItem","tempMenuItem","push","foodFactsObject","itemSizes","nutritionalInfo","nutritionalItem","onFoodHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests'\n\nexport function GetMenuForm(props) {\n    const { value: diningHall, bind: bindDiningHall, reset: resetDiningHall } = useInput('');\n    const { value: date, bind: bindDate, reset: resetDate } = useInput('');\n    const { value: meal, bind: bindMeal, reset: resetMeal } = useInput('');\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        // resetDiningHall();\n        // resetDate();\n        // resetMeal();\n    }\n\n    const fetchMenus = async (diningHall, date, meal) => {\n        diningHall = diningHall.replace(' ', '%20')\n        meal = meal.toUpperCase();\n        const data = await getMenus(diningHall, date, meal)\n        setMenus(data)\n    }\n\n    const updateMenus = () => {\n        // tempFoodDisplay = {}\n        let tempFoodDisplay = {}\n        let tempFoodAmounts = {}\n        let tempFoodFacts = {}\n\n        console.log(foodAmounts)\n        menus[0].category.map((categoryItem, index) => {\n            // foodAmounts[categoryItem.name] = 0\n            let tempCategoryObject = {}\n            let tempFoodFactsSingle = {}\n            tempCategoryObject[categoryItem.name] = []\n            categoryItem.menuItem.map((menuItem, index) => {\n                const tempMenuItem = {}\n                tempMenuItem[menuItem.name] = 0\n                tempFoodAmounts = ({...tempFoodAmounts, ...tempMenuItem})\n                tempCategoryObject[categoryItem.name].push(menuItem.name)\n                let foodFactsObject = {}\n                foodFactsObject[menuItem.name] = {}\n                if('nutritionalInfo' in menuItem.itemSizes[0]){\n                    menuItem.itemSizes[0].nutritionalInfo.map((nutritionalItem, index) => {\n                        foodFactsObject[menuItem.name][\"Beef\"] = \"three\"\n                        // console.log(nutritionalItem.value)\n                        // let includeItem = false\n                        if (nutritionalItem.name === \"Calories\"){\n                            // console.log(nutritionalItem.value)\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Protein\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Carbohydrate\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Fat\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n\n                        // foodFacts[menuItem.name][nutritionalItem.name] = nutritionalItem.value\n                        // const newFoodFacts = {\n                        //     ...foodFacts,\n                        //     ...(includeItem && {\"three\": nutritionalItem['value']})\n                        // }\n                        // foodFacts = newFoodFacts\n                    })\n                    tempFoodFactsSingle = {...tempFoodFactsSingle, ...foodFactsObject}\n                }\n                else{\n                    console.log(`${menuItem.name} is missing nutrition facts`)\n                }\n                // setFoodFacts({...foodFacts, ...foodFactsObject})\n            })\n            tempFoodFacts = {...tempFoodFacts, ...tempFoodFactsSingle}\n            console.log(tempFoodFacts)\n            // console.log(tempCategoryObject)\n            tempFoodDisplay = {...tempFoodDisplay, ...tempCategoryObject}\n        })\n\n        props.onFoodHandler([...tempFoodDisplay, ...tempFoodAmounts, ...tempFoodFacts])\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"main-form\">\n                <label>\n                    Dining Hall:\n                    <select {...bindDiningHall}>\n                        <option defaultValue=\"Bursley\">Bursley</option>\n                        <option value=\"South Quad\">South Quad</option>\n                        <option value=\"East Quad\">East Quad</option>\n                        <option value=\"Mosher Jordan\">Mosher Jordan</option>\n                    </select>\n                </label>\n                <label>\n                    Date:\n                    <input type=\"date\" {...bindDate} />\n                </label>\n                <label>\n                    Meal:\n                    <select {...bindMeal} className=\"custom-select\">\n                        <option value=\"Breakfast\">Breakfast</option>\n                        <option value=\"Brunch\">Brunch</option>\n                        <option value=\"Lunch\">Lunch</option>\n                        <option value=\"Linner\">Linner</option>\n                        <option value=\"Dinner\">Dinner</option>\n                    </select>\n                </label>\n            </form>\n            <button className=\"buttons\" onClick={() => fetchMenus(diningHall, date, meal)}>Get Menus</button>\n            <button className=\"buttons\" onClick={() => updateMenus()}>Update Menus</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}