{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MainForm(props) {\n  _s();\n\n  const {\n    value: diningHall,\n    bind: bindDiningHall,\n    reset: resetDiningHall\n  } = useInput('');\n  const {\n    value: date,\n    bind: bindDate,\n    reset: resetDate\n  } = useInput('');\n  const {\n    value: meal,\n    bind: bindMeal,\n    reset: resetMeal\n  } = useInput(''); // const { value:lastName, bind:bindLastName, reset:resetLastName } = useInput('');    \n\n  const [menus, setMenus] = useState([{\n    category: [{\n      name: \"chicken\"\n    }, {\n      name: \"beef\"\n    }]\n  }]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // alert(`Submitting Name ${value}`);\n\n    resetDiningHall();\n    resetDate();\n    resetMeal();\n  };\n\n  const fetchMenus = async () => {\n    const data = await getMenus(\"01\", \"Bursley\", \"LUNCH\");\n    setMenus(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Dining Hall:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...bindDiningHall\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...bindDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Meal:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...bindMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchMenus(),\n        children: \"Get Menus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), // let url = \n    menus[0].category.map((categoryItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: categoryItem.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainForm, \"nJJts3hpUGHvM9mpCTh6gxBLij0=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = MainForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainForm\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/Form.jsx"],"names":["React","useState","useEffect","useInput","getMenus","MainForm","props","value","diningHall","bind","bindDiningHall","reset","resetDiningHall","date","bindDate","resetDate","meal","bindMeal","resetMeal","menus","setMenus","category","name","handleSubmit","evt","preventDefault","fetchMenus","data","map","categoryItem","index"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,KAAK,EAACC,UAAR;AAAoBC,IAAAA,IAAI,EAACC,cAAzB;AAAyCC,IAAAA,KAAK,EAACC;AAA/C,MAAmET,QAAQ,CAAC,EAAD,CAAjF;AACA,QAAM;AAAEI,IAAAA,KAAK,EAACM,IAAR;AAAcJ,IAAAA,IAAI,EAACK,QAAnB;AAA6BH,IAAAA,KAAK,EAACI;AAAnC,MAAiDZ,QAAQ,CAAC,EAAD,CAA/D;AACA,QAAM;AAAEI,IAAAA,KAAK,EAACS,IAAR;AAAcP,IAAAA,IAAI,EAACQ,QAAnB;AAA6BN,IAAAA,KAAK,EAACO;AAAnC,MAAiDf,QAAQ,CAAC,EAAD,CAA/D,CAH4B,CAK5B;;AAEA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,CAAC;AAACoB,IAAAA,QAAQ,EACzC,CACA;AAACC,MAAAA,IAAI,EAAE;AAAP,KADA,EACmB;AAACA,MAAAA,IAAI,EAAE;AAAP,KADnB;AADgC,GAAD,CAAD,CAAlC;;AAMA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACC,cAAJ,GAD0B,CAE1B;;AACAb,IAAAA,eAAe;AACfG,IAAAA,SAAS;AACTG,IAAAA,SAAS;AACZ,GAND;;AAQA,QAAMQ,UAAU,GAAG,YAAY;AAC3B,UAAMC,IAAI,GAAG,MAAMvB,QAAQ,CAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB,CAA3B;AACAgB,IAAAA,QAAQ,CAACO,IAAD,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEJ,YAAhB;AAAA,8BACI;AAAA,gDAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAAuBb;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,yCAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAAuBI;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAA,yCAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAA,aAAuBG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAQ,QAAA,OAAO,EAAE,MAAMS,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAkBQ;AACAP,IAAAA,KAAK,CAAC,CAAD,CAAL,CAASE,QAAT,CAAkBO,GAAlB,CAAsB,CAACC,YAAD,EAAeC,KAAf,kBAClB;AAAA,gBACKD,YAAY,CAACP;AADlB,OAAUQ,KAAV;AAAA;AAAA;AAAA;AAAA,YADJ,CAnBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAtDezB,Q;UAC6DF,Q,EAClBA,Q,EACAA,Q;;;KAH3CE,Q","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport {getMenus} from '../utils/requests'\n\nexport function MainForm(props) {\n    const { value:diningHall, bind:bindDiningHall, reset:resetDiningHall } = useInput('');\n    const { value:date, bind:bindDate, reset:resetDate } = useInput('');    \n    const { value:meal, bind:bindMeal, reset:resetMeal } = useInput('');    \n\n    // const { value:lastName, bind:bindLastName, reset:resetLastName } = useInput('');    \n\n    const [menus, setMenus] = useState([{category: \n        [\n        {name: \"chicken\"}, {name: \"beef\"}\n        ]\n    }]);\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        resetDiningHall();\n        resetDate();\n        resetMeal();\n    }\n\n    const fetchMenus = async () => {\n        const data = await getMenus(\"01\", \"Bursley\", \"LUNCH\")\n        setMenus(data)\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Dining Hall:\n                    <input type=\"text\" {...bindDiningHall} />\n                </label>\n                <label>\n                    Date:\n                    <input type=\"text\" {...bindDate} />\n                </label>\n                <label>\n                    Meal:\n                    <input type=\"text\" {...bindMeal} />\n                </label>\n                <br></br>\n                <button onClick={() => fetchMenus()}>Get Menus</button>\n            </form>\n            {\n                // let url = \n                menus[0].category.map((categoryItem, index) => (\n                    <div key={index}>\n                        {categoryItem.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}