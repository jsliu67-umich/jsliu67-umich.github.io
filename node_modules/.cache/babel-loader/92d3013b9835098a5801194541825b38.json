{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/Calculate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Calculate(props) {\n  _s();\n\n  const [cals, setCals] = useState(0.0);\n  const [protein, setProtein] = useState(0.0);\n  const [carbs, setCarbs] = useState(0.0);\n  const [fats, setFats] = useState(0.0);\n  const [calculate, setCalculate] = useState(false);\n\n  const combineCalculate = boolVal => {\n    setCalculate(boolVal);\n    let [cals, protein, carbs, fats] = calculateTotal();\n    setCals(cals);\n    setProtein(protein);\n    setCarbs(carbs);\n    setFats(fats);\n    console.log(carbs);\n    return;\n  };\n\n  const displayCalculate = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nutrition-header\",\n        children: \"Nutrition Facts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"nutrition-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Calories: \", cals]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Protein: \", protein]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total Carbohydrate: \", carbs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Total Fat: \", fats]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n\n  const calculateTotal = () => {\n    let cals = 0,\n        protein = 0,\n        carbs = 0,\n        fats = 0; // setCalculate(false)\n\n    console.log(props.foodAmounts);\n\n    function printMissing(missing, value) {\n      console.log(`${missing}: ${value} missing`);\n    }\n\n    Object.entries(props.foodAmounts).map(_ref => {\n      let [key, val] = _ref;\n\n      // if value missing, console.log it. else, += it\n      if (val !== 0) {\n        if (props.foodFacts[key][\"Calories\"] !== undefined) {\n          // console.log(val)\n          // rounds number to 2 decimal places\n          // setCals(cals + Math.round((foodFacts[key][\"Calories\"] * val)*100)/100)\n          cals += Math.round(props.foodFacts[key][\"Calories\"] * val * 100) / 100;\n        } else {\n          printMissing(key, 'Calories');\n        }\n\n        if (props.foodFacts[key][\"Protein\"] !== undefined) {\n          // setProtein(protein + Math.round((foodFacts[key][\"Protein\"] * val)*100)/100)\n          protein += Math.round(props.foodFacts[key][\"Protein\"] * val * 100) / 100;\n        } else {\n          printMissing(key, 'Protein');\n        }\n\n        if (props.foodFacts[key][\"Total Carbohydrate\"] !== undefined) {\n          // setCarbs(carbs + Math.round((foodFacts[key][\"Total Carbohydrate\"] * val)*100)/100)\n          carbs += Math.round(props.foodFacts[key][\"Total Carbohydrate\"] * val * 100) / 100;\n        } else {\n          printMissing(key, 'Total Carbohydrate');\n        }\n\n        if (props.foodFacts[key][\"Total Fat\"] !== undefined) {\n          // setFats(fats + Math.round((foodFacts[key][\"Total Fat\"] * val)*100)/100)\n          fats += Math.round(props.foodFacts[key][\"Total Fat\"] * val * 100) / 100;\n        } else {\n          printMissing(key, 'Total Fat');\n        }\n      }\n    });\n    return [cals, protein, carbs, fats];\n  };\n\n  {\n    /*#__PURE__*/\n    _jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: () => {\n        combineCalculate(true);\n      },\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n\n    calculate ? displayCalculate() : null;\n  }\n}\n\n_s(Calculate, \"2YXNZyBLTrEMAOYB71UsXifwg2c=\");\n\n_c = Calculate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculate\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/Calculate.jsx"],"names":["React","useState","useEffect","Calculate","props","cals","setCals","protein","setProtein","carbs","setCarbs","fats","setFats","calculate","setCalculate","combineCalculate","boolVal","calculateTotal","console","log","displayCalculate","foodAmounts","printMissing","missing","value","Object","entries","map","key","val","foodFacts","undefined","Math","round"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport function Calculate(props) {\n    const [cals, setCals] = useState(0.0)\n    const [protein, setProtein] = useState(0.0)\n    const [carbs, setCarbs] = useState(0.0)\n    const [fats, setFats] = useState(0.0)\n    const [calculate, setCalculate] = useState(false)\n\n    const combineCalculate = (boolVal) => {\n        setCalculate(boolVal)\n        let [cals, protein, carbs, fats] = calculateTotal()\n        setCals(cals)\n        setProtein(protein)\n        setCarbs(carbs)\n        setFats(fats)\n        console.log(carbs)\n        return\n    }\n    const displayCalculate = () => {\n        return (\n            <>\n                <div className=\"nutrition-header\">Nutrition Facts</div>\n                <ul className=\"nutrition-items\">\n                    {/* <li>{names}</li> */}\n                    <li>Calories: {cals}</li>\n                    <li>Protein: {protein}</li>\n                    <li>Total Carbohydrate: {carbs}</li>\n                    <li>Total Fat: {fats}</li>\n                </ul>\n            </>\n        )\n    }\n\n    const calculateTotal = () => {\n        let cals = 0, protein = 0, carbs = 0, fats = 0\n        // setCalculate(false)\n        console.log(props.foodAmounts)\n        function printMissing(missing, value) {\n            console.log(`${missing}: ${value} missing`)\n        }\n        Object.entries(props.foodAmounts).map(([key, val]) => {\n            // if value missing, console.log it. else, += it\n            if (val !== 0) {\n                if (props.foodFacts[key][\"Calories\"] !== undefined) {\n                    // console.log(val)\n                    // rounds number to 2 decimal places\n                    // setCals(cals + Math.round((foodFacts[key][\"Calories\"] * val)*100)/100)\n                    cals += Math.round((props.foodFacts[key][\"Calories\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Calories')\n                }\n                if (props.foodFacts[key][\"Protein\"] !== undefined) {\n                    // setProtein(protein + Math.round((foodFacts[key][\"Protein\"] * val)*100)/100)\n                    protein += Math.round((props.foodFacts[key][\"Protein\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Protein')\n                }\n                if (props.foodFacts[key][\"Total Carbohydrate\"] !== undefined) {\n                    // setCarbs(carbs + Math.round((foodFacts[key][\"Total Carbohydrate\"] * val)*100)/100)\n                    carbs += Math.round((props.foodFacts[key][\"Total Carbohydrate\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Carbohydrate')\n                }\n                if (props.foodFacts[key][\"Total Fat\"] !== undefined) {\n                    // setFats(fats + Math.round((foodFacts[key][\"Total Fat\"] * val)*100)/100)\n                    fats += Math.round((props.foodFacts[key][\"Total Fat\"] * val) * 100) / 100\n                }\n                else {\n                    printMissing(key, 'Total Fat')\n                }\n            }\n        })\n        return [cals, protein, carbs, fats]\n    }\n\n    {\n        <button className=\"buttons\" onClick={() => {\n            combineCalculate(true)\n        }}>\n            Calculate\n        </button>\n        calculate ?\n            displayCalculate() :\n            null\n    }\n\n}"]},"metadata":{},"sourceType":"module"}