{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GetMenuForm(props) {\n  _s();\n\n  const {\n    value: diningHall,\n    bind: bindDiningHall,\n    reset: resetDiningHall\n  } = useInput('');\n  const {\n    value: date,\n    bind: bindDate,\n    reset: resetDate\n  } = useInput('');\n  const {\n    value: meal,\n    bind: bindMeal,\n    reset: resetMeal\n  } = useInput('');\n  const [menus, setMenus] = useState([{\n    category: [{\n      name: \"\",\n      menuItem: [{\n        name: \"\",\n        itemSizes: [{\n          nutritionalInfo: [{\n            name: \"\",\n            value: \"\"\n          }]\n        }]\n      }]\n    }, {}]\n  }]);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault(); // alert(`Submitting Name ${value}`);\n    // resetDiningHall();\n    // resetDate();\n    // resetMeal();\n  };\n\n  const fetchMenus = async (diningHall, date, meal) => {\n    diningHall = diningHall.replace(' ', '%20');\n    meal = meal.toUpperCase();\n    console.log(diningHall);\n    console.log(date);\n    console.log(meal);\n    const data = await getMenus(diningHall, date, meal);\n    setMenus(data);\n  };\n\n  const updateMenus = () => {\n    // tempFoodDisplay = {}\n    let tempFoodDisplay = {};\n    let tempFoodAmounts = {};\n    let tempFoodFacts = {};\n    console.log(menus);\n    menus[0].category.map((categoryItem, index) => {\n      // foodAmounts[categoryItem.name] = 0\n      let tempCategoryObject = {};\n      let tempFoodFactsSingle = {};\n      tempCategoryObject[categoryItem.name] = [];\n      categoryItem.menuItem.map((menuItem, index) => {\n        const tempMenuItem = {};\n        tempMenuItem[menuItem.name] = 0;\n        tempFoodAmounts = { ...tempFoodAmounts,\n          ...tempMenuItem\n        };\n        tempCategoryObject[categoryItem.name].push(menuItem.name);\n        let foodFactsObject = {};\n        foodFactsObject[menuItem.name] = {};\n\n        if ('nutritionalInfo' in menuItem.itemSizes[0]) {\n          menuItem.itemSizes[0].nutritionalInfo.map((nutritionalItem, index) => {\n            foodFactsObject[menuItem.name][\"Beef\"] = \"three\"; // console.log(nutritionalItem.value)\n            // let includeItem = false\n\n            if (nutritionalItem.name === \"Calories\") {\n              // console.log(nutritionalItem.value)\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Protein\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Total Carbohydrate\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } else if (nutritionalItem.name === \"Total Fat\") {\n              // includeItem = true\n              foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value;\n            } // foodFacts[menuItem.name][nutritionalItem.name] = nutritionalItem.value\n            // const newFoodFacts = {\n            //     ...foodFacts,\n            //     ...(includeItem && {\"three\": nutritionalItem['value']})\n            // }\n            // foodFacts = newFoodFacts\n\n          });\n          tempFoodFactsSingle = { ...tempFoodFactsSingle,\n            ...foodFactsObject\n          };\n        } else {\n          console.log(`${menuItem.name} is missing nutrition facts`);\n        } // setFoodFacts({...foodFacts, ...foodFactsObject})\n\n      });\n      tempFoodFacts = { ...tempFoodFacts,\n        ...tempFoodFactsSingle\n      };\n      console.log(tempFoodFacts); // console.log(tempCategoryObject)\n\n      tempFoodDisplay = { ...tempFoodDisplay,\n        ...tempCategoryObject\n      };\n    });\n    props.onFoodHandler([...tempFoodDisplay, ...tempFoodAmounts, ...tempFoodFacts]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"main-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Dining Hall:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: diningHall,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            defaultValue: \"Bursley\",\n            children: \"Bursley\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"South Quad\",\n            children: \"South Quad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"East Quad\",\n            children: \"East Quad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mosher Jordan\",\n            children: \"Mosher Jordan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ...bindDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Meal:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: meal,\n          onChange: handleChange,\n          className: \"custom-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Breakfast\",\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Brunch\",\n            children: \"Brunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lunch\",\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Linner\",\n            children: \"Linner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dinner\",\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: () => fetchMenus(diningHall, date, meal),\n      children: \"Get Menus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: () => updateMenus(),\n      children: \"Update Menus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GetMenuForm, \"+jhMGEkAnj8Q4zodUYdCDTxVIVk=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = GetMenuForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMenuForm\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/GetMenuForm.jsx"],"names":["React","useState","useEffect","useInput","getMenus","GetMenuForm","props","value","diningHall","bind","bindDiningHall","reset","resetDiningHall","date","bindDate","resetDate","meal","bindMeal","resetMeal","menus","setMenus","category","name","menuItem","itemSizes","nutritionalInfo","handleChange","event","setValue","target","handleSubmit","evt","preventDefault","fetchMenus","replace","toUpperCase","console","log","data","updateMenus","tempFoodDisplay","tempFoodAmounts","tempFoodFacts","map","categoryItem","index","tempCategoryObject","tempFoodFactsSingle","tempMenuItem","push","foodFactsObject","nutritionalItem","onFoodHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useInput } from './input-hook';\nimport { getMenus } from '../utils/requests'\n\nexport function GetMenuForm(props) {\n    const { value: diningHall, bind: bindDiningHall, reset: resetDiningHall } = useInput('');\n    const { value: date, bind: bindDate, reset: resetDate } = useInput('');\n    const { value: meal, bind: bindMeal, reset: resetMeal } = useInput('');\n\n\n    const [menus, setMenus] = useState(\n        [{\n            category: [{\n                name: \"\",\n                menuItem: [\n                    {\n                        name: \"\",\n                        itemSizes: [{\n                            nutritionalInfo: [\n                                {\n                                    name: \"\",\n                                    value: \"\"\n                                }\n                            ]\n                        }]\n                    }\n                ]\n            }, {}\n            ]\n        }]\n    );\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n    \n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        // resetDiningHall();\n        // resetDate();\n        // resetMeal();\n    }\n\n    const fetchMenus = async (diningHall, date, meal) => {\n        diningHall = diningHall.replace(' ', '%20')\n        meal = meal.toUpperCase();\n\n        console.log(diningHall)\n        console.log(date)\n        console.log(meal)\n        const data = await getMenus(diningHall, date, meal)\n        setMenus(data)\n    }\n\n    const updateMenus = () => {\n        // tempFoodDisplay = {}\n        let tempFoodDisplay = {}\n        let tempFoodAmounts = {}\n        let tempFoodFacts = {}\n        console.log(menus)\n        menus[0].category.map((categoryItem, index) => {\n            // foodAmounts[categoryItem.name] = 0\n            let tempCategoryObject = {}\n            let tempFoodFactsSingle = {}\n            tempCategoryObject[categoryItem.name] = []\n            categoryItem.menuItem.map((menuItem, index) => {\n                const tempMenuItem = {}\n                tempMenuItem[menuItem.name] = 0\n                tempFoodAmounts = ({...tempFoodAmounts, ...tempMenuItem})\n                tempCategoryObject[categoryItem.name].push(menuItem.name)\n                let foodFactsObject = {}\n                foodFactsObject[menuItem.name] = {}\n                if('nutritionalInfo' in menuItem.itemSizes[0]){\n                    menuItem.itemSizes[0].nutritionalInfo.map((nutritionalItem, index) => {\n                        foodFactsObject[menuItem.name][\"Beef\"] = \"three\"\n                        // console.log(nutritionalItem.value)\n                        // let includeItem = false\n                        if (nutritionalItem.name === \"Calories\"){\n                            // console.log(nutritionalItem.value)\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Protein\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Carbohydrate\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n                        else if (nutritionalItem.name === \"Total Fat\"){\n                            // includeItem = true\n                            foodFactsObject[menuItem.name][nutritionalItem.name] = nutritionalItem.value    \n                        }\n\n                        // foodFacts[menuItem.name][nutritionalItem.name] = nutritionalItem.value\n                        // const newFoodFacts = {\n                        //     ...foodFacts,\n                        //     ...(includeItem && {\"three\": nutritionalItem['value']})\n                        // }\n                        // foodFacts = newFoodFacts\n                    })\n                    tempFoodFactsSingle = {...tempFoodFactsSingle, ...foodFactsObject}\n                }\n                else{\n                    console.log(`${menuItem.name} is missing nutrition facts`)\n                }\n                // setFoodFacts({...foodFacts, ...foodFactsObject})\n            })\n            tempFoodFacts = {...tempFoodFacts, ...tempFoodFactsSingle}\n            console.log(tempFoodFacts)\n            // console.log(tempCategoryObject)\n            tempFoodDisplay = {...tempFoodDisplay, ...tempCategoryObject}\n        })\n\n        props.onFoodHandler([...tempFoodDisplay, ...tempFoodAmounts, ...tempFoodFacts])\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"main-form\">\n                <label>\n                    Dining Hall:\n                    <select value={diningHall} onChange={handleChange}>\n                        <option defaultValue=\"Bursley\">Bursley</option>\n                        <option value=\"South Quad\">South Quad</option>\n                        <option value=\"East Quad\">East Quad</option>\n                        <option value=\"Mosher Jordan\">Mosher Jordan</option>\n                    </select>\n                </label>\n                <label>\n                    Date:\n                    <input type=\"date\" {...bindDate} />\n                </label>\n                <label>\n                    Meal:\n                    <select value={meal} onChange={handleChange} className=\"custom-select\">\n                        <option value=\"Breakfast\">Breakfast</option>\n                        <option value=\"Brunch\">Brunch</option>\n                        <option value=\"Lunch\">Lunch</option>\n                        <option value=\"Linner\">Linner</option>\n                        <option value=\"Dinner\">Dinner</option>\n                    </select>\n                </label>\n            </form>\n            <button className=\"buttons\" onClick={() => fetchMenus(diningHall, date, meal)}>Get Menus</button>\n            <button className=\"buttons\" onClick={() => updateMenus()}>Update Menus</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}