{"ast":null,"code":"var _jsxFileName = \"/Users/jsliu/Desktop/dining-hall-app/src/components/AddFoodForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AddFoodForm(props) {\n  const handleSubmit = evt => {\n    evt.preventDefault(); // alert(`Submitting Name ${value}`);\n    // resetDiningHall();\n    // resetDate();\n    // resetMeal();\n  };\n\n  const amountInput = val => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: event => {\n            event.currentTarget.classList.toggle('active');\n          },\n          children: [val, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"amount-form-single\",\n          type: \"number\",\n          onChange: num => {\n            // console.log(num.target.value)\n            let tempFoodAmounts = props.foodAmounts;\n            tempFoodAmounts[val] = num.target.value; // console.log(tempFoodAmounts)\n\n            props.setFoodAmounts(tempFoodAmounts);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, val, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"amount-form\",\n      children: Object.entries(props.foodDisplay).map(_ref => {\n        let [key, value] = _ref;\n        return Object.entries(value).map(_ref2 => {\n          let [key2, value2] = _ref2;\n          return amountInput(value2);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calculate, {\n      foodFacts: props.foodFacts,\n      foodAmounts: props.foodAmounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = AddFoodForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddFoodForm\");","map":{"version":3,"sources":["/Users/jsliu/Desktop/dining-hall-app/src/components/AddFoodForm.jsx"],"names":["React","useState","useEffect","Calculate","AddFoodForm","props","handleSubmit","evt","preventDefault","amountInput","val","event","currentTarget","classList","toggle","num","tempFoodAmounts","foodAmounts","target","value","setFoodAmounts","Object","entries","foodDisplay","map","key","key2","value2","foodFacts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1BA,IAAAA,GAAG,CAACC,cAAJ,GAD0B,CAE1B;AACA;AACA;AACA;AACH,GAND;;AAQA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,wBACI;AAAA,8BACI;AAAA,gCACI;AAAG,UAAA,OAAO,EACNC,KAAK,IAAI;AACLA,YAAAA,KAAK,CAACC,aAAN,CAAoBC,SAApB,CAA8BC,MAA9B,CAAqC,QAArC;AACH,WAHL;AAAA,qBAKKJ,GALL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAO,UAAA,SAAS,EAAC,oBAAjB;AAAsC,UAAA,IAAI,EAAC,QAA3C;AAAoD,UAAA,QAAQ,EAAEK,GAAG,IAAI;AACjE;AACA,gBAAIC,eAAe,GAAGX,KAAK,CAACY,WAA5B;AACAD,YAAAA,eAAe,CAACN,GAAD,CAAf,GAAuBK,GAAG,CAACG,MAAJ,CAAWC,KAAlC,CAHiE,CAIjE;;AACAd,YAAAA,KAAK,CAACe,cAAN,CAAqBJ,eAArB;AACH;AAND;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA,SAAYN,GAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH,GAxBD;;AA0BA,sBACI;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAEQW,MAAM,CAACC,OAAP,CAAejB,KAAK,CAACkB,WAArB,EAAkCC,GAAlC,CAAsC;AAAA,YAAC,CAACC,GAAD,EAAMN,KAAN,CAAD;AAAA,eAClCE,MAAM,CAACC,OAAP,CAAeH,KAAf,EAAsBK,GAAtB,CAA0B;AAAA,cAAC,CAACE,IAAD,EAAOC,MAAP,CAAD;AAAA,iBACtBlB,WAAW,CAACkB,MAAD,CADW;AAAA,SAA1B,CADkC;AAAA,OAAtC;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEtB,KAAK,CAACuB,SAA5B;AAAuC,MAAA,WAAW,EAAEvB,KAAK,CAACY;AAA1D;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;KAjDeb,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Calculate } from \"./Calculate\";\n\nexport function AddFoodForm(props) {\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        // alert(`Submitting Name ${value}`);\n        // resetDiningHall();\n        // resetDate();\n        // resetMeal();\n    }\n\n    const amountInput = (val) => {\n        return (\n            <div>\n                <label key={val}>\n                    <a onClick={\n                        event => {\n                            event.currentTarget.classList.toggle('active');\n                        }\n                    }>\n                        {val}:\n                    </a>\n                    <input className=\"amount-form-single\" type=\"number\" onChange={num => {\n                        // console.log(num.target.value)\n                        let tempFoodAmounts = props.foodAmounts\n                        tempFoodAmounts[val] = num.target.value\n                        // console.log(tempFoodAmounts)\n                        props.setFoodAmounts(tempFoodAmounts)\n                    }} />\n                </label>\n                <div className=\"details\">\n\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <form className=\"amount-form\">\n                {\n                    Object.entries(props.foodDisplay).map(([key, value]) => (\n                        Object.entries(value).map(([key2, value2]) => (\n                            amountInput(value2)\n                        ))\n                    ))\n                }\n            </form>\n            <Calculate foodFacts={props.foodFacts} foodAmounts={props.foodAmounts}/>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}